{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Tom/Desktop/maria-courses-next-js/lib/db-interactions.js"],"sourcesContent":["import { S3 } from '@aws-sdk/client-s3';\r\n\r\nimport fs from 'node:fs';\r\n\r\nimport sql from 'better-sqlite3';\r\nimport slugify from 'slugify';\r\nimport xss from 'xss';\r\n\r\n// const s3 = new S3({\r\n//     region: 'us-east-1',\r\n//     credentials: {\r\n//     accessKeyId: process.env.local.AWS_ACCESS_KEY_ID,\r\n//     secretAccessKey: process.env.local.AWS_SECRET_ACCESS_KEY,\r\n//   },\r\n//   });\r\nconst db = sql('courses.db');\r\n\r\nexport async function getCourses() {\r\n    await new Promise((resolve) => setTimeout(resolve, 1500));\r\n\r\n    // throw new Error('Loading meals failed');\r\n    return db.prepare('SELECT * FROM courses').all();\r\n}\r\n\r\nexport function getCourse(slug) {\r\n    const course = db.prepare('SELECT * FROM courses WHERE slug = ?').get(slug);\r\n    return course || null; // Return null if no course is found\r\n}\r\n\r\nexport async function saveCourse(course) {\r\n    try {\r\n        const twoSlugWords = course.title.split(\" \").slice(0, 2).join(\" \"); // Take first two words\r\n        const randomSlugAddition = Math.floor(Math.random() * 100) + 1;\r\n        const modifiedTitle = `${twoSlugWords} ${randomSlugAddition}`;\r\n        course.slug = slugify(modifiedTitle, { lower: true, strict: true }); // Convert to slug\r\n        course.course_description = xss(course.course_description)\r\n        \r\n        const extension = course.image.name.split('.').pop();\r\n        \r\n        const fileName = `${course.slug}.${extension}`\r\n\r\n        const stream = fs.createWriteStream(`public/${fileName}`)\r\n        const bufferedImage = await course.image.arrayBuffer();\r\n\r\n        stream.write(Buffer.from(bufferedImage), (error) => {\r\n            if (error) {\r\n                throw new Error('Ukládání obrázku selhalo!');\r\n            }\r\n        });\r\n\r\n        // console.log(\"🔹 Uploading to S3: \", `public/${fileName}`);\r\n\r\n        // await s3.putObject({\r\n        //     Bucket: 'marian-courses-bucket',\r\n        //     Key: `public/${fileName}`,\r\n        //     Body: Buffer.from(bufferedImage),\r\n        //     ContentType: course.image.type,\r\n        // });\r\n\r\n        // console.log(\"✅ Upload successful!\");\r\n\r\n        course.image = fileName;\r\n\r\n        return db.prepare(`\r\n            INSERT INTO courses \r\n                (date, slug, title, image, summary, course_description, lecturer, lecturer_email)\r\n            VALUES (\r\n                @date,\r\n                @slug,\r\n                @title,\r\n                @image,\r\n                @summary,\r\n                @course_description,\r\n                @lecturer,\r\n                @lecturer_email\r\n            )\r\n        `).run(course);\r\n        } catch (error) {\r\n            console.error(\"❌ Upload failed:\", error);\r\n        }\r\n    }\r\n\r\n\r\n// SORTING COURSES\r\n\r\n// export function getLatestCourses() {\r\n//   return db.prepare('SELECT * FROM courses').slice(0, 3);\r\n// }\r\n\r\nexport function getLatestCourses() {\r\n  return db.prepare(`\r\n    SELECT * FROM courses \r\n    ORDER BY \r\n      SUBSTR(date, 1, 4) DESC,                -- Order by Year descending\r\n      CAST(SUBSTR(date, 9, 2) AS INTEGER) DESC, -- Order by Month descending\r\n      CAST(SUBSTR(date, 6, 2) AS INTEGER) DESC  -- Order by Day descending\r\n    LIMIT 3\r\n  `).all();\r\n}\r\n\r\n// export function getAvailableCourseYears() {\r\n//   return db.prepare('SELECT * FROM courses').reduce((years, course) => {\r\n//     const year = new Date(course.date).getFullYear();\r\n//     if (!years.includes(year)) {\r\n//       years.push(year);\r\n//     }\r\n//     return years;\r\n//   }, []).sort((a, b) => b - a);\r\n// }\r\n\r\n// export function getAvailableCourseYears() {\r\n//   const courses = db.prepare('SELECT date FROM courses').all();\r\n//   return courses\r\n//     .map(course => {\r\n//         const parts = course.date.split(\"-\"); // Split by \"-\"\r\n//         const year = parts[0]; // First part is always the year (YYYY)\r\n//         return parseInt(year, 10); // Convert to number\r\n//     })\r\n//     .filter((year, index, self) => self.indexOf(year) === index) // Remove duplicates\r\n//     .sort((a, b) => b - a); // Sort in descending order\r\n// }\r\n\r\nexport function getAvailableCourseYears() { \r\n  const courses = db.prepare('SELECT date FROM courses').all();\r\n\r\n  return courses\r\n    .map(course => {\r\n        const parts = course.date.split(\"-\"); // Split by \"-\"\r\n        return {\r\n            year: parseInt(parts[0], 10),  // Extract year (YYYY)\r\n            day: parseInt(parts[1], 10),   // Extract day (DD)\r\n            month: parseInt(parts[2], 10)  // Extract month (MM)\r\n        };\r\n    })\r\n    .sort((a, b) => {\r\n        // Sort by year, then month, then day in descending order\r\n        return b.year - a.year || b.month - a.month || b.day - a.day;\r\n    })\r\n    .map(course => course.year) // Keep only the year\r\n    .filter((year, index, self) => self.indexOf(year) === index); // Remove duplicates\r\n}\r\n\r\nexport function getAvailableCourseMonths(year) {\r\n  return db.prepare('SELECT * FROM courses').reduce((months, course) => {\r\n    const newsYear = new Date(course.date).getFullYear();\r\n    if (newsYear === +year) {\r\n      const month = new Date(course.date).getMonth();\r\n      if (!months.includes(month)) {\r\n        months.push(month + 1);\r\n      }\r\n    }\r\n    return months;\r\n  }, []).sort((a, b) => b - a);\r\n}\r\n\r\n// export function getCoursesForYear(year) {\r\n//   return db.prepare('SELECT * FROM courses').filter(\r\n//     (course) => new Date(course.date).getFullYear() === +year\r\n//   );\r\n// }\r\n\r\nexport function getCoursesForYear(year) {\r\n  const courses = db.prepare(`\r\n    SELECT * FROM courses \r\n    WHERE SUBSTR(date, 1, 4) = ? \r\n    ORDER BY SUBSTR(date, 6, 2) ASC, SUBSTR(date, 9, 2) ASC\r\n  `).all(year.toString());\r\n  return courses;\r\n}\r\n\r\nexport function getCoursesForYearAndMonth(year, month) {\r\n  return db.prepare('SELECT * FROM courses').filter((course) => {\r\n    const newsYear = new Date(course.date).getFullYear();\r\n    const newsMonth = new Date(course.date).getMonth() + 1;\r\n    return newsYear === +year && newsMonth === +month;\r\n  });\r\n}\r\n\r\n\r\n// export async function getAllNews() {\r\n//   const news = db.prepare('SELECT * FROM news').all();\r\n//   await new Promise((resolve) => setTimeout(resolve, 2000));\r\n//   return news;\r\n// }\r\n\r\n// export async function getNewsItem(slug) {\r\n//   const newsItem = db.prepare('SELECT * FROM news WHERE slug = ?').get(slug);\r\n\r\n//   await new Promise((resolve) => setTimeout(resolve, 2000));\r\n\r\n//   return newsItem;\r\n// }\r\n\r\n// export async function getLatestNews() {\r\n//   const latestNews = db\r\n//     .prepare('SELECT * FROM news ORDER BY date DESC LIMIT 3')\r\n//     .all();\r\n//   await new Promise((resolve) => setTimeout(resolve, 2000));\r\n//   return latestNews;\r\n// }\r\n\r\n// export async function getAvailableNewsYears() {\r\n//   const years = db\r\n//     .prepare(\"SELECT DISTINCT strftime('%Y', date) as year FROM news\")\r\n//     .all()\r\n//     .map((year) => year.year);\r\n\r\n//   await new Promise((resolve) => setTimeout(resolve, 2000));\r\n\r\n//   return years;\r\n// }\r\n\r\n// export function getAvailableNewsMonths(year) {\r\n//   return db\r\n//     .prepare(\r\n//       \"SELECT DISTINCT strftime('%m', date) as month FROM news WHERE strftime('%Y', date) = ?\"\r\n//     )\r\n//     .all(year)\r\n//     .map((month) => month.month);\r\n// }\r\n\r\n// export async function getNewsForYear(year) {\r\n//   const news = db\r\n//     .prepare(\r\n//       \"SELECT * FROM news WHERE strftime('%Y', date) = ? ORDER BY date DESC\"\r\n//     )\r\n//     .all(year);\r\n\r\n//   await new Promise((resolve) => setTimeout(resolve, 2000));\r\n\r\n//   return news;\r\n// }\r\n\r\n// export async function getNewsForYearAndMonth(year, month) {\r\n//   const news = db\r\n//     .prepare(\r\n//       \"SELECT * FROM news WHERE strftime('%Y', date) = ? AND strftime('%m', date) = ? ORDER BY date DESC\"\r\n//     )\r\n//     .all(year, month);\r\n\r\n//   await new Promise((resolve) => setTimeout(resolve, 2000));\r\n\r\n//   return news;\r\n// }\r\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AAEA;AAEA;AACA;AACA;;;;;;AAEA,sBAAsB;AACtB,2BAA2B;AAC3B,qBAAqB;AACrB,wDAAwD;AACxD,gEAAgE;AAChE,OAAO;AACP,QAAQ;AACR,MAAM,KAAK,CAAA,GAAA,2HAAA,CAAA,UAAG,AAAD,EAAE;AAER,eAAe;IAClB,MAAM,IAAI,QAAQ,CAAC,UAAY,WAAW,SAAS;IAEnD,2CAA2C;IAC3C,OAAO,GAAG,OAAO,CAAC,yBAAyB,GAAG;AAClD;AAEO,SAAS,UAAU,IAAI;IAC1B,MAAM,SAAS,GAAG,OAAO,CAAC,wCAAwC,GAAG,CAAC;IACtE,OAAO,UAAU,MAAM,oCAAoC;AAC/D;AAEO,eAAe,WAAW,MAAM;IACnC,IAAI;QACA,MAAM,eAAe,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,uBAAuB;QAC3F,MAAM,qBAAqB,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,OAAO;QAC7D,MAAM,gBAAgB,GAAG,aAAa,CAAC,EAAE,oBAAoB;QAC7D,OAAO,IAAI,GAAG,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD,EAAE,eAAe;YAAE,OAAO;YAAM,QAAQ;QAAK,IAAI,kBAAkB;QACvF,OAAO,kBAAkB,GAAG,CAAA,GAAA,mIAAA,CAAA,UAAG,AAAD,EAAE,OAAO,kBAAkB;QAEzD,MAAM,YAAY,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG;QAElD,MAAM,WAAW,GAAG,OAAO,IAAI,CAAC,CAAC,EAAE,WAAW;QAE9C,MAAM,SAAS,6GAAA,CAAA,UAAE,CAAC,iBAAiB,CAAC,CAAC,OAAO,EAAE,UAAU;QACxD,MAAM,gBAAgB,MAAM,OAAO,KAAK,CAAC,WAAW;QAEpD,OAAO,KAAK,CAAC,OAAO,IAAI,CAAC,gBAAgB,CAAC;YACtC,IAAI,OAAO;gBACP,MAAM,IAAI,MAAM;YACpB;QACJ;QAEA,6DAA6D;QAE7D,uBAAuB;QACvB,uCAAuC;QACvC,iCAAiC;QACjC,wCAAwC;QACxC,sCAAsC;QACtC,MAAM;QAEN,uCAAuC;QAEvC,OAAO,KAAK,GAAG;QAEf,OAAO,GAAG,OAAO,CAAC,CAAC;;;;;;;;;;;;;QAanB,CAAC,EAAE,GAAG,CAAC;IACP,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,oBAAoB;IACtC;AACJ;AASG,SAAS;IACd,OAAO,GAAG,OAAO,CAAC,CAAC;;;;;;;EAOnB,CAAC,EAAE,GAAG;AACR;AAwBO,SAAS;IACd,MAAM,UAAU,GAAG,OAAO,CAAC,4BAA4B,GAAG;IAE1D,OAAO,QACJ,GAAG,CAAC,CAAA;QACD,MAAM,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,eAAe;QACrD,OAAO;YACH,MAAM,SAAS,KAAK,CAAC,EAAE,EAAE;YACzB,KAAK,SAAS,KAAK,CAAC,EAAE,EAAE;YACxB,OAAO,SAAS,KAAK,CAAC,EAAE,EAAE,IAAK,qBAAqB;QACxD;IACJ,GACC,IAAI,CAAC,CAAC,GAAG;QACN,yDAAyD;QACzD,OAAO,EAAE,IAAI,GAAG,EAAE,IAAI,IAAI,EAAE,KAAK,GAAG,EAAE,KAAK,IAAI,EAAE,GAAG,GAAG,EAAE,GAAG;IAChE,GACC,GAAG,CAAC,CAAA,SAAU,OAAO,IAAI,EAAE,qBAAqB;KAChD,MAAM,CAAC,CAAC,MAAM,OAAO,OAAS,KAAK,OAAO,CAAC,UAAU,QAAQ,oBAAoB;AACtF;AAEO,SAAS,yBAAyB,IAAI;IAC3C,OAAO,GAAG,OAAO,CAAC,yBAAyB,MAAM,CAAC,CAAC,QAAQ;QACzD,MAAM,WAAW,IAAI,KAAK,OAAO,IAAI,EAAE,WAAW;QAClD,IAAI,aAAa,CAAC,MAAM;YACtB,MAAM,QAAQ,IAAI,KAAK,OAAO,IAAI,EAAE,QAAQ;YAC5C,IAAI,CAAC,OAAO,QAAQ,CAAC,QAAQ;gBAC3B,OAAO,IAAI,CAAC,QAAQ;YACtB;QACF;QACA,OAAO;IACT,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC,GAAG,IAAM,IAAI;AAC5B;AAQO,SAAS,kBAAkB,IAAI;IACpC,MAAM,UAAU,GAAG,OAAO,CAAC,CAAC;;;;EAI5B,CAAC,EAAE,GAAG,CAAC,KAAK,QAAQ;IACpB,OAAO;AACT;AAEO,SAAS,0BAA0B,IAAI,EAAE,KAAK;IACnD,OAAO,GAAG,OAAO,CAAC,yBAAyB,MAAM,CAAC,CAAC;QACjD,MAAM,WAAW,IAAI,KAAK,OAAO,IAAI,EAAE,WAAW;QAClD,MAAM,YAAY,IAAI,KAAK,OAAO,IAAI,EAAE,QAAQ,KAAK;QACrD,OAAO,aAAa,CAAC,QAAQ,cAAc,CAAC;IAC9C;AACF,EAGA,uCAAuC;CACvC,yDAAyD;CACzD,+DAA+D;CAC/D,iBAAiB;CACjB,IAAI;CAEJ,4CAA4C;CAC5C,gFAAgF;CAEhF,+DAA+D;CAE/D,qBAAqB;CACrB,IAAI;CAEJ,0CAA0C;CAC1C,0BAA0B;CAC1B,gEAAgE;CAChE,cAAc;CACd,+DAA+D;CAC/D,uBAAuB;CACvB,IAAI;CAEJ,kDAAkD;CAClD,qBAAqB;CACrB,yEAAyE;CACzE,aAAa;CACb,iCAAiC;CAEjC,+DAA+D;CAE/D,kBAAkB;CAClB,IAAI;CAEJ,iDAAiD;CACjD,cAAc;CACd,gBAAgB;CAChB,iGAAiG;CACjG,QAAQ;CACR,iBAAiB;CACjB,oCAAoC;CACpC,IAAI;CAEJ,+CAA+C;CAC/C,oBAAoB;CACpB,gBAAgB;CAChB,+EAA+E;CAC/E,QAAQ;CACR,kBAAkB;CAElB,+DAA+D;CAE/D,iBAAiB;CACjB,IAAI;CAEJ,8DAA8D;CAC9D,oBAAoB;CACpB,gBAAgB;CAChB,4GAA4G;CAC5G,QAAQ;CACR,yBAAyB;CAEzB,+DAA+D;CAE/D,iBAAiB;CACjB,IAAI"}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/Courses/CourseList.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"cta\": \"CourseList-module__S2ZAAa__cta\",\n  \"header\": \"CourseList-module__S2ZAAa__header\",\n  \"highlight\": \"CourseList-module__S2ZAAa__highlight\",\n  \"loading\": \"CourseList-module__S2ZAAa__loading\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Tom/Desktop/maria-courses-next-js/components/Courses/CourseList.js"],"sourcesContent":["import { Suspense } from \"react\";\r\nimport classes from \"./CourseList.module.css\";\r\n\r\n\r\nexport default function CourseList({ loader, course }) {\r\n\r\n    return (\r\n        <>\r\n            <main className={classes.main}>\r\n                <Suspense fallback={<p className={classes.loading}>Loading...</p>}>\r\n                    {loader()}\r\n                </Suspense>\r\n            </main>\r\n        </>\r\n    )\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAGe,SAAS,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE;IAEjD,qBACI;kBACI,cAAA,8OAAC;YAAK,WAAW,kJAAA,CAAA,UAAO,CAAC,IAAI;sBACzB,cAAA,8OAAC,qMAAA,CAAA,WAAQ;gBAAC,wBAAU,8OAAC;oBAAE,WAAW,kJAAA,CAAA,UAAO,CAAC,OAAO;8BAAE;;;;;;0BAC9C;;;;;;;;;;;;AAKrB"}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/Courses/CourseItem.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"actions\": \"CourseItem-module__PZLJRW__actions\",\n  \"content\": \"CourseItem-module__PZLJRW__content\",\n  \"course\": \"CourseItem-module__PZLJRW__course\",\n  \"headerText\": \"CourseItem-module__PZLJRW__headerText\",\n  \"image\": \"CourseItem-module__PZLJRW__image\",\n  \"summary\": \"CourseItem-module__PZLJRW__summary\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Tom/Desktop/maria-courses-next-js/components/Courses/CourseItem.js"],"sourcesContent":["import Link from 'next/link';\r\nimport Image from 'next/image';\r\n\r\nimport classes from './CourseItem.module.css';\r\n\r\nexport default function CourseItem({ date, title, slug, image, summary, lecturer }) {\r\n    return (\r\n      <article className={classes.course}>\r\n        <header>\r\n          <div className={classes.image}>\r\n            <Image\r\n              src={`/${image}`} \r\n              // https://marian-courses-bucket.s3.us-east-1.amazonaws.com/public/\r\n              alt={title}\r\n              fill\r\n            />\r\n          </div>\r\n          <div className={classes.headerText}>\r\n            <h2>{title}</h2>\r\n            <p>Vedoucí: {lecturer}</p>\r\n            <p>Publikováno: {date}</p>\r\n          </div>\r\n        </header>\r\n        <div className={classes.content}>\r\n          <p className={classes.summary}>{summary}</p>\r\n          <div className={classes.actions}>\r\n            <Link href={`/courses/${slug}`}>Více informací</Link>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    );\r\n  }\r\n  "],"names":[],"mappings":";;;;AAAA;AACA;AAEA;;;;;AAEe,SAAS,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE;IAC9E,qBACE,8OAAC;QAAQ,WAAW,kJAAA,CAAA,UAAO,CAAC,MAAM;;0BAChC,8OAAC;;kCACC,8OAAC;wBAAI,WAAW,kJAAA,CAAA,UAAO,CAAC,KAAK;kCAC3B,cAAA,8OAAC,6HAAA,CAAA,UAAK;4BACJ,KAAK,CAAC,CAAC,EAAE,OAAO;4BAChB,mEAAmE;4BACnE,KAAK;4BACL,IAAI;;;;;;;;;;;kCAGR,8OAAC;wBAAI,WAAW,kJAAA,CAAA,UAAO,CAAC,UAAU;;0CAChC,8OAAC;0CAAI;;;;;;0CACL,8OAAC;;oCAAE;oCAAU;;;;;;;0CACb,8OAAC;;oCAAE;oCAAc;;;;;;;;;;;;;;;;;;;0BAGrB,8OAAC;gBAAI,WAAW,kJAAA,CAAA,UAAO,CAAC,OAAO;;kCAC7B,8OAAC;wBAAE,WAAW,kJAAA,CAAA,UAAO,CAAC,OAAO;kCAAG;;;;;;kCAChC,8OAAC;wBAAI,WAAW,kJAAA,CAAA,UAAO,CAAC,OAAO;kCAC7B,cAAA,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAM,CAAC,SAAS,EAAE,MAAM;sCAAE;;;;;;;;;;;;;;;;;;;;;;;AAK1C"}},
    {"offset": {"line": 402, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 407, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/Courses/CoursesGrid.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"courses\": \"CoursesGrid-module__nvThEq__courses\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA"}},
    {"offset": {"line": 410, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 416, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Tom/Desktop/maria-courses-next-js/components/Courses/CoursesGrid.js"],"sourcesContent":["import CourseItem from './CourseItem';\r\nimport classes from './CoursesGrid.module.css';\r\n\r\nexport default function CoursesGrid({ courses }) {\r\n    return (\r\n        <ul className={classes.courses}>\r\n            {courses.map(course => (\r\n                <li key={course.id}>\r\n                    <CourseItem {...course} />\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS,YAAY,EAAE,OAAO,EAAE;IAC3C,qBACI,8OAAC;QAAG,WAAW,mJAAA,CAAA,UAAO,CAAC,OAAO;kBACzB,QAAQ,GAAG,CAAC,CAAA,uBACT,8OAAC;0BACG,cAAA,8OAAC,mIAAA,CAAA,UAAU;oBAAE,GAAG,MAAM;;;;;;eADjB,OAAO,EAAE;;;;;;;;;;AAMlC"}},
    {"offset": {"line": 447, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 452, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/courses/page.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"cta\": \"page-module__JZcRDa__cta\",\n  \"header\": \"page-module__JZcRDa__header\",\n  \"highlight\": \"page-module__JZcRDa__highlight\",\n  \"loading\": \"page-module__JZcRDa__loading\",\n  \"subheader\": \"page-module__JZcRDa__subheader\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 459, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 465, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Tom/Desktop/maria-courses-next-js/app/courses/page.js"],"sourcesContent":["import { getCourses } from \"@/lib/db-interactions\";\r\nimport CourseList from \"@/components/Courses/CourseList\";\r\nimport CoursesGrid from \"@/components/Courses/CoursesGrid\";\r\nimport classes from \"./page.module.css\";\r\n\r\nexport const metadata = {\r\n    title: 'All Courses',\r\n    description: 'Browse the magnificent courses offered'\r\n}\r\n\r\nasync function LoadingCourses() {\r\n    const courses = await getCourses();\r\n    return <CoursesGrid courses={courses}/>\r\n}\r\n\r\nexport default async function CoursesPage(){\r\n\r\n    return (\r\n        <>\r\n            <header className={classes.header}>\r\n                <h1>Kurzy vytvořené {''}\r\n                    <span className={classes.highlight}>jen pro vás</span>\r\n                </h1>\r\n                                <p>\r\n                    Vyberte svůj kurz na míru a zažijte proměnu!\r\n                </p>\r\n            </header>\r\n            <CourseList loader={LoadingCourses}/>\r\n            {/* <main className={classes.main}>\r\n                <Suspense fallback={<p className={classes.loading}>Loading...</p>}>\r\n                    <LoadingCourses />\r\n                </Suspense>\r\n            </main> */}\r\n        </>\r\n    );\r\n}"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;;AAEO,MAAM,WAAW;IACpB,OAAO;IACP,aAAa;AACjB;AAEA,eAAe;IACX,MAAM,UAAU,MAAM,CAAA,GAAA,yHAAA,CAAA,aAAU,AAAD;IAC/B,qBAAO,8OAAC,oIAAA,CAAA,UAAW;QAAC,SAAS;;;;;;AACjC;AAEe,eAAe;IAE1B,qBACI;;0BACI,8OAAC;gBAAO,WAAW,qIAAA,CAAA,UAAO,CAAC,MAAM;;kCAC7B,8OAAC;;4BAAG;4BAAiB;0CACjB,8OAAC;gCAAK,WAAW,qIAAA,CAAA,UAAO,CAAC,SAAS;0CAAE;;;;;;;;;;;;kCAExB,8OAAC;kCAAE;;;;;;;;;;;;0BAIvB,8OAAC,mIAAA,CAAA,UAAU;gBAAC,QAAQ;;;;;;;;AAQhC"}},
    {"offset": {"line": 540, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 551, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 551, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}