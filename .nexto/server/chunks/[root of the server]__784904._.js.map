{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Tom/Desktop/maria-courses-next-js/lib/db.js"],"sourcesContent":["import { Pool } from 'pg';\r\nimport dotenv from 'dotenv';\r\n\r\ndotenv.config();\r\n\r\nconst pool = new Pool({\r\n  user: process.env.PG_USER,\r\n  host: process.env.PG_HOST,\r\n  database: process.env.PG_DATABASE,\r\n  password: process.env.PG_PASSWORD,\r\n  port: process.env.PG_PORT,\r\n});\r\n\r\nasync function connectDB() {\r\n  try {\r\n    await pool.connect();\r\n    console.log('Connected to PostgreSQL database');\r\n  } catch (error) {\r\n    console.error('Database connection error:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Use named export for connectDB\r\nexport { connectDB };\r\nexport default pool;\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAGA,OAAO,MAAM;AAEb,MAAM,OAAO,IAAI,KAAK;IACpB,MAAM,QAAQ,GAAG,CAAC,OAAO;IACzB,MAAM,QAAQ,GAAG,CAAC,OAAO;IACzB,UAAU,QAAQ,GAAG,CAAC,WAAW;IACjC,UAAU,QAAQ,GAAG,CAAC,WAAW;IACjC,MAAM,QAAQ,GAAG,CAAC,OAAO;AAC3B;AAEA,eAAe;IACb,IAAI;QACF,MAAM,KAAK,OAAO;QAClB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,MAAM;IACR;AACF;;uCAIe"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Tom/Desktop/maria-courses-next-js/app/api/test-db/route.js"],"sourcesContent":["import pool, { connectDB } from '@/lib/db'; // Import correctly\r\n\r\nexport async function GET() {\r\n  try {\r\n    await connectDB(); // Ensures DB connection is established\r\n\r\n    const result = await pool.query('SELECT NOW()'); // Test query\r\n    return Response.json({\r\n      success: true,\r\n      message: 'Database connected successfully!',\r\n      server_time: result.rows[0].now,\r\n    });\r\n  } catch (error) {\r\n    console.error('Database connection error:', error);\r\n    return Response.json(\r\n      { success: false, error: 'Database connection failed', details: error.message },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA,wLAA4C,mBAAmB;;AAExD,eAAe;IACpB,IAAI;QACF,MAAM,CAAA,GAAA,2GAAA,CAAA,YAAS,AAAD,KAAK,uCAAuC;QAE1D,MAAM,SAAS,MAAM,2GAAA,CAAA,UAAI,CAAC,KAAK,CAAC,iBAAiB,aAAa;QAC9D,OAAO,SAAS,IAAI,CAAC;YACnB,SAAS;YACT,SAAS;YACT,aAAa,OAAO,IAAI,CAAC,EAAE,CAAC,GAAG;QACjC;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,SAAS,IAAI,CAClB;YAAE,SAAS;YAAO,OAAO;YAA8B,SAAS,MAAM,OAAO;QAAC,GAC9E;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}