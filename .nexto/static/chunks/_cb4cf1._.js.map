{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Tom/Desktop/maria-courses-next-js-java-backend/components/LoginForm/LoginForm.js"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\"; // ✅ Added for redirection\r\nimport axios from \"axios\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { GoogleLogin } from 'react-google-login';\r\n\r\n\r\nexport default function LoginForm() {\r\n  const [formState, setFormState] = useState({ errors: null, message: null });\r\n  // const [googleError, setGoogleError] = useState(null); // ✅ State for Google login error\r\n  const { setAuthenticated, setIsAdmin } = useAuth();\r\n  const router = useRouter(); // ✅ Added for navigation\r\n  \r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    const email = e.target.email.value;\r\n    const password = e.target.password.value;\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8080/login\", {\r\n        email,\r\n        password,\r\n      });\r\n      const data = response.data;\r\n      console.log('Login response:', data); // debugging\r\n\r\n      if (data.success) {\r\n        // Store the JWT token in localStorage or cookies\r\n        localStorage.setItem(\"token\", data.token);\r\n        localStorage.setItem(\"isAdmin\", JSON.stringify(data.user.is_admin)); // Store isAdmin in localStorage\r\n        setAuthenticated(true);\r\n        setIsAdmin(data.user.is_admin);\r\n        console.log(\"isAdmin state after setting:\", data.user.is_admin); // Debugging\r\n        if (data.user.is_admin) {\r\n          router.push(\"/admin-dashboard\");\r\n        } else {\r\n          router.push(\"/my-courses\");\r\n        }\r\n      } else {\r\n        setFormState({ errors: \"Invalid credentials\", message: null });\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error); // debugging\r\n      setFormState({ errors: error.response?.data?.message || \"An error occurred\", message: null });\r\n    }\r\n  };\r\n\r\n  const handleGoogleLoginSuccess = async (response) => {\r\n    const { tokenId } = response;\r\n\r\n    try {\r\n      const res = await axios.post(\"http://localhost:8080/google-login\", {\r\n        token: tokenId,\r\n      });\r\n      const data = res.data;\r\n      console.log('Google login response:', data); // Debugging\r\n\r\n      if (data.success) {\r\n        localStorage.setItem(\"token\", data.token);\r\n        localStorage.setItem(\"isAdmin\", JSON.stringify(data.user.is_admin)); // Store isAdmin in localStorage\r\n        setAuthenticated(true);\r\n        console.log(\"is_admin value from backend:\", data.user.is_admin); // Debugging\r\n        setIsAdmin(data.user.is_admin);\r\n        console.log(\"isAdmin state after setting:\", data.user.is_admin); // Debugging\r\n        if (data.user.is_admin) {\r\n          router.push(\"/admin-dashboard\");\r\n        } else {\r\n          router.push(\"/my-courses\");\r\n        }\r\n      } else {\r\n        setFormState({ errors: \"Google login failed\", message: null });\r\n      }\r\n    } catch (error) {\r\n      console.error('Google login error:', error); // Debugging\r\n      setFormState({ errors: error.response?.data?.message || \"An error occurred\", message: null });\r\n    }\r\n  };\r\n\r\n  const handleGoogleLoginFailure = (error) => {\r\n    console.error('Google login failed:', error);\r\n    setFormState({ errors: \"Google login failed\", message: null });\r\n  };\r\n\r\n  return (\r\n      <div id =\"login-box\">\r\n        <form id=\"auth-form\" onSubmit={handleLogin}>\r\n          <div>\r\n            {/* <img src=\"/images/auth-icon.jpg\" alt=\"A lock icon\" /> */}\r\n          </div>\r\n          \r\n          <p>\r\n            <label htmlFor=\"email\">Email: </label>\r\n            <input type=\"email\" name=\"email\" id=\"email\" required />\r\n          </p>\r\n\r\n          <p>\r\n            <label htmlFor=\"password\">Heslo: </label>\r\n            <input type=\"password\" name=\"password\" id=\"password\" required />\r\n          </p>\r\n\r\n          {formState.errors && (\r\n            <p style={{ color: 'red' }}>{formState.errors}</p>\r\n          )}\r\n\r\n          {formState.message && (\r\n            <p style={{ color: 'green' }}>{formState.message}</p>\r\n          )}\r\n\r\n          <p>\r\n            <button type=\"submit\">Přihlásit se</button>\r\n          </p>\r\n        </form>\r\n        <GoogleLogin\r\n          clientId=\"GOOGLE_CLIENT_ID\"\r\n          buttonText=\"Registrovat / Přihlásit se přes Google\"\r\n          onSuccess={handleGoogleLoginSuccess}\r\n          onFailure={handleGoogleLoginFailure}\r\n          cookiePolicy={'single_host_origin'}\r\n        />\r\n      </div>\r\n    );\r\n  }"],"names":[],"mappings":"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"}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}